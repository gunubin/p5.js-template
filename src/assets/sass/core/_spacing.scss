$space-section-top: (200px / 3);
$space-section-bottom: (200px / 3);
//$space-section-top-desktop-num: 242;
//$space-section-bottom-desktop-num: 230;
$space-section-top-desktop-num: 300;
$space-section-bottom-desktop-num: 300;

// https://medium.com/eightshapes-llc/space-in-design-systems-188bcbae0d62
// 共通的ではないスペースについては各コンポーネントにハードコーディングしてもよい
// http://www.carbondesignsystem.com/style/spacing
// layout用とコンポーネント用でspacingを分けるパターンもあるが一旦一種類でやってみる
$space-xxs: 1px !default;
$space-xs: 2px !default;
$space-sm: 4px !default;
$space-md: 8px !default;
$space-lg: 16px !default;
$space-xl: 32px !default;
$space-xxl: 64px !default;

$space-xxs-desktop: 2px !default;
$space-xs-desktop: 4px !default;
$space-sm-desktop: 8px !default;
$space-md-desktop: 16px !default;
$space-lg-desktop: 32px !default;
$space-xl-desktop: 64px !default;
$space-xxl-desktop: 128px !default;

$spaces: (xxs: $space-xxs, xs: $space-xs, sm: $space-sm, md: $space-md, lg: $space-lg, xl: $space-xl, xxl: $space-xxl);

$spaces-desktop: (xxs: $space-xxs-desktop, xs: $space-xs-desktop, sm: $space-sm-desktop, md: $space-md-desktop, lg: $space-lg-desktop, xl: $space-xl-desktop, xxl: $space-xxl-desktop);

$spacing-type-inset: 'inset';
$spacing-type-inset-squish: 'squish';
$spacing-type-inset-stretch: 'stretch';
$spacing-type-stack: 'stack';
$sides: (top, bottom, left, right);

@mixin spacing($kind: 'margin', $size: $space-md, $type: $spacing-type-stack) {
  @if $type == $spacing-type-stack {
    #{$kind}: $size 0 0 0;
  } @else if $type == $spacing-type-inset-squish {
    #{$kind}: #{$size - $size/3} $size;
  } @else if $type == $spacing-type-inset-stretch {
    #{$kind}: $size #{$size - $size/3};
  } @else if $type == $spacing-type-inset {
    #{$kind}: $size;
  }
}

@mixin inset($size: $space-md, $kind: 'padding') {
  @include spacing('padding', $size, $spacing-type-inset);
}

@mixin stretch($size: $space-md) {
  @include spacing('padding', $size, $spacing-type-inset-stretch);
}

@mixin squish($size: $space-md) {
  @include spacing('padding', $size, $spacing-type-inset-squish);
}

@mixin stack($size: $space-md, $kind: 'margin') {
  @include spacing($kind, $size, $spacing-type-stack);
}

@mixin _spacing($property: 'margin', $size-type: md, $kind: '') {
  $space: map-get($spaces, $size-type);
  @if $kind == '' {
    #{$property}: $space;
  } @else {
    #{$property}-#{$kind}: $space;
  }
  @include mq-desktop {
    $space-desktop: map-get($spaces-desktop, $size-type);
    @if $kind == '' {
      #{$property}: $space-desktop;
    } @else {
      #{$property}-#{$kind}: $space-desktop;
    }
  }
}
@mixin padding($size: $space-md, $type: $spacing-type-stack) {
  @include spacing('padding', $size, $type);
}
@mixin padding-left($size-type: md) {
  @include _spacing(padding, $size-type, left)
}
@mixin padding-right($size-type: md) {
  @include _spacing(padding, $size-type, right)
}
@mixin padding-top($size-type: md) {
  @include _spacing(padding, $size-type, top)
}
@mixin padding-bottom($size-type: md) {
  @include _spacing(padding, $size-type, bottom)
}

@mixin margin($size: $space-md, $type: $spacing-type-inset) {
  @include spacing('margin', $size, $type);
}
@mixin margin-left($size-type: md) {
  @include _spacing(margin, $size-type, left)
}
@mixin margin-right($size-type: md) {
  @include _spacing(margin, $size-type, right)
}
@mixin margin-top($size-type: md) {
  @include _spacing(margin, $size-type, top)
}
@mixin margin-bottom($size-type: md) {
  @include _spacing(margin, $size-type, bottom)
}

@mixin margin-top-vw-desktop($size) {
  margin-top: get-vw-desktop($size);
  @include mq-large-desktop {
    margin-top: #{$size}px;
  }
}

@mixin margin-left-vw-desktop($size) {
  margin-left: get-vw-desktop($size);
  @include mq-large-desktop {
    margin-left: #{$size}px;
  }
}


@mixin margin-right-vw-desktop($size) {
  margin-right: get-vw-desktop($size);
  @include mq-large-desktop {
    margin-right: #{$size}px;
  }
}


@mixin mx-vw-desktop($size) {
  margin-left: get-vw-desktop($size);
  margin-right: get-vw-desktop($size);
  @include mq-large-desktop {
    margin-left: #{$size}px;
    margin-right: #{$size}px;
  }
}

@mixin margin-bottom-vw-desktop($size) {
  margin-bottom: get-vw-desktop($size);
  @include mq-large-desktop {
    margin-bottom: #{$size}px;
  }
}

@mixin padding-top-vw-desktop($size) {
  padding-top: get-vw-desktop($size);
  @include mq-large-desktop {
    padding-top: #{$size}px;
  }
}

@mixin padding-right-vw-desktop($size) {
  padding-right: get-vw-desktop($size);
  @include mq-large-desktop {
    padding-right: #{$size}px;
  }
}

@mixin padding-left-vw-desktop($size) {
  padding-right: get-vw-desktop($size);
  @include mq-large-desktop {
    padding-left: #{$size}px;
  }
}

@mixin padding-bottom-vw-desktop($size) {
  padding-bottom: get-vw-desktop($size);
  @include mq-large-desktop {
    padding-bottom: #{$size}px;
  }
}

@mixin px-vw-desktop($size) {
  padding-left: get-vw-desktop($size);
  padding-right: get-vw-desktop($size);
  @include mq-large-desktop {
    padding-left: #{$size}px;
    padding-right: #{$size}px;
  }
}

@mixin py-vw-desktop($size) {
  padding-top: get-vw-desktop($size);
  padding-bottom: get-vw-desktop($size);
  @include mq-large-desktop {
    padding-top: #{$size}px;
    padding-bottom: #{$size}px;
  }
}



@mixin padding-vw-desktop($size) {
  padding: get-vw-desktop($size);
  @include mq-large-desktop {
    padding: #{$size}px;
  }
}
