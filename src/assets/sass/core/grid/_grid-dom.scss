$flex-target: (items, self, content);
$flex-position: (start: flex-start, end: flex-end, center: center, baseline: baseline);
@each $target in $flex-target {
  @each $position, $position_prop in $flex-position {
    .align-#{$target}-#{$position} {
      align-#{$target}: $position_prop !important;
    }
    .justify-#{$target}-#{$position} {
      justify-#{$target}: $position_prop !important;
    }
  }
}


$flex-wrap: (wrap, nowrap, revert, wrap-reverse);
.flex-nowrap {
  flex-wrap: nowrap !important;
}
@each $wrap in $flex-wrap {
  .flex-#{$wrap} {
    flex-wrap: $wrap;
  }
}
@each $media in $media-query {
  @include mq($media) {
    @each $wrap in $flex-wrap {
      .flex-#{$wrap}-#{$media} {
        flex-wrap: $wrap !important;
      }
    }
  }
}


$flex-direction: (row, column, row-reverse, column-reverse, revert);
@each $direction in $flex-direction {
  .flex-#{$direction} {
    flex-direction: $direction !important;
  }
}
@each $media in $media-query {
  @include mq($media) {
    @each $direction in $flex-direction {
      .flex-#{$direction}-#{$media} {
        flex-direction: $direction !important;
      }
    }
  }
}

@mixin make-col($prefix: 'col', $columns: $grid-columns, $gutter-width: $grid-gutter-width, $i: 1, $class: '.#{$prefix}-#{$i}') {
  .#{$prefix}-#{$i} {
    @include col($i of $columns, $gutter-width);
  }
}

@mixin make-offset($prefix: 'col', $columns: $grid-columns, $i: 1) {
  .#{$prefix}-offset-#{$i} {
    @include offset($i, $columns);
  }
}

@mixin make-grid($prefix: 'col', $columns: $grid-columns, $gutter-width: $grid-gutter-width) {
  .#{$prefix} {
    padding-right: $gutter-width/2;
    padding-left: $gutter-width/2;

    max-width: 100%;

    flex: 1 1 auto;
  }
  .#{$prefix}-auto {
    @include col-auto($gutter-width);
  }
  @for $i from 0 through $columns {
    @include make-col($prefix, $columns, $gutter-width, $i);
    @include make-offset($prefix, $columns, $i);
  }
}


@mixin build-grid($namespace, $prefix: 'col', $min-width: false, $container-width: false, $gutter-width: $grid-gutter-width, $columns: $grid-columns) {
  /* container
  ------------------------------------------------------------ */
  @if ($min-width == false) {
    /* once ------------------------------------------------------------ */
    .#{$namespace}container {
      @include container($container-width, $gutter-width);
    }
    .#{$namespace}row {
      @include row($gutter-width);
    }
    @include make-grid(#{$namespace}#{$prefix}, $columns, $gutter-width);
  } @else {
    @media (min-width: $min-width) {
      @include make-grid(#{$namespace}#{$prefix}, $columns, $gutter-width);
      .#{$namespace}container {
        @include container($container-width, $gutter-width);
      }
    }
  }
}

